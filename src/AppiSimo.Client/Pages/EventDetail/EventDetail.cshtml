@page "/event"
@page "/event/{Id}"

@inherits EventDetailComponent

<form>

    <div class="form-group">
        <label for="users" class="control-label">Users</label>
        <input bind="@Filter"/>
        <ul class="overflow-auto list-group list-group-flush" style="max-height: 200px">

            @foreach (var user in FilteredUsers.Where(user => user.Name.ToUpper().Contains(Filter.Trim().ToUpper())).OrderBy(u => u.Name))
            {
                <li class="list-group-item user-add-li" onclick="@(() => AddUser(user))">
                    <span>@user.Name @user.Surname</span><span class="oi oi-plus float-right" data-toggle="tooltip" aria-hidden="true"></span>
                </li>
            }

        </ul>
    </div>

    <div class="form-group">
        <label for="startDate" class="control-label">Selected User</label>
        <ul class="list-group list-group-flush">

            @foreach (var user in SelectedUsers)
            {
                <li class="list-group-item user-remove-li" onclick="@(() => RemoveUser(user))">
                    <span>@user.Name @user.Surname</span><span class="oi oi-minus float-right" data-toggle="tooltip" aria-hidden="true"></span>
                </li>
            }

        </ul>
    </div>

    <div class="form-group">
        <label for="startDate" class="control-label">StartDate</label>
        <input id="startDate" class="form-control" bind="@StartDate"/>
    </div>

    <div class="form-group">
        <label for="endDate" class="control-label">EndDate</label>
        <input id="endDate" class="form-control" bind="@EndDate"/>
    </div>

    <div class="form-group">
        <label for="courtsSelect">Campo</label>
        <select class="form-control" id="courtsSelect" bind="@SelectedCourt">

            <option disabled>-- Selezionare un Campo --</option>

            @* TODO: ISSUE https://github.com/aspnet/AspNetCore/issues/5616*@

            @foreach (var court in Courts.OrderBy(c => c.Name))
            {
                if (Entity.CourtId == court.Id)
                {
                    <option selected value="@court.Id">@court.Name</option>

                    continue;
                }

                <option value="@court.Id">@court.Name</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="lightsSelect">Luce</label>
        <select class="form-control" id="lightsSelect" bind="@SelectedLight">

            @foreach (var light in Lights.OrderBy(l => l.Priority).ThenBy(l => l.LightType))
            {
                if (Entity.Light?.Id == light.Id)
                {
                    <option selected value="@light.Id">@light.LightType</option>
                    continue;
                }

                <option value="@light.Id">@light.LightType</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="heatsSelect">Riscaldamento</label>
        <select class="form-control" id="heatsSelect" bind="@SelectedHeat">

            @foreach (var heat in Heats.OrderBy(h => h.Priority).ThenBy(h => h.HeatType))
            {
                if (Entity.Heat?.Id == heat.Id)
                {
                    <option selected value="@heat.Id">@heat.HeatType</option>
                    continue;
                }

                <option value="@heat.Id">@heat.HeatType</option>
            }

        </select>
    </div>

    <div class="form-group">
        <button type="button" class="btn btn-block btn-outline-success" onclick="@(async () => await Save())">Salva</button>
        <button type="button" class="btn btn-block btn-outline-danger" style="display: @(Entity.Id != Guid.Empty ? "inline-block;" : "none");" onclick="@(async () => await Delete())">Cancella</button>
    </div>
</form>