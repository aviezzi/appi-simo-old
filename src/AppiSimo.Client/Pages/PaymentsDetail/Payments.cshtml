@page "/payments/{id}"

@inherits PaymentsComponent

<div class="d-flex mt-4">
    <h1>@Entities.FirstOrDefault()?.User.Profile.GivenName @Entities.FirstOrDefault()?.User.Profile.FamilyName</h1>
</div>

@if (!Entities.Any())
{
    <div class="d-flex mt-4">
        <h3 class="text-muted">Non ci sono prenotazioni attive per questo utente</h3>
    </div>
    
    return;
}

<div class="d-flex">
    <h3 class="text-muted">Totale da Corrispondere: @GetTotalNotPaid() &euro;</h3>
</div>

<div class="d-flex flex-wrap justify-content-between">
    @foreach (var userEvent in Entities
        .OrderByDescending(userEvent => !userEvent.Paid)
        .ThenByDescending(userEvent => userEvent.Event.StartDate))
    {
        <div class="card w-100 m-2" style="max-width: 400px">

            @if (userEvent.Paid)
            {
                <div class="card-header text-center font-weight-bold alert alert-success">Pagato</div>
            }
            else
            {
                <div class="card-header text-center font-weight-bold alert alert-danger ">Non Pagato</div>
            }

            <div class="card-body text-justify font-weight-bold">

                <p>
                    <span>Importo:&nbsp;</span>
                    <span class="text-secondary">@userEvent.Cost&nbsp;&euro;</span>
                </p>

                <p>
                    <span>Data:&nbsp;</span>
                    <span class="text-secondary">
                        @(userEvent.Event.StartDate.DayOfWeek == userEvent.Event.EndDate.DayOfWeek
                              ? $"{userEvent.Event.StartDate:d}"
                              : $"{userEvent.Event.StartDate:d} - {userEvent.Event.StartDate:d}")
                    </span>
                </p>

                <p>
                    <span>Data Inizio:&nbsp;</span>
                    <span class="text-secondary">@($"{userEvent.Event.StartDate.ToLocalTime():t}")</span>
                </p>

                <p>
                    <span>Data Fine:&nbsp;</span>
                    <span class="text-secondary">@($"{userEvent.Event.EndDate.ToLocalTime():t}")</span>
                </p>

                @if (userEvent.Event.LightDuration > 0)
                {
                    <p>
                        <span class="oi oi-lightbulb"></span>
                        &nbsp;
                        <span class="text-secondary">@($"{userEvent.Event.LightDuration:0.0}")</span>
                    </p>
                }

                @if (userEvent.Event.HeatDuration > 0)
                {
                    <p>
                        <span class="oi oi-fire"></span>
                        &nbsp;
                        <span class="text-secondary">@($"{userEvent.Event.HeatDuration:0.0}")</span>
                    </p>
                }

            </div>
            <div class="card-footer text-white d-flex">
                <a class="btn btn-outline-secondary flex-equal mr-2" href=@($"/event/{userEvent.EventId}")>Modifica</a>
                <input type="button"
                       class=@($"btn {(userEvent.Paid ? "btn-outline-danger" : "btn-outline-success")} flex-equal ml-2")
                       onclick="@(async () => await MarkAsPaid(userEvent))" value=@(userEvent.Paid ? "Annulla" : "Paga")/>
            </div>
        </div>
    }

    @foreach (var _ in Entities)
    {
        <div class="w-100 m-2" style="max-width: 400px"></div>
    }

</div>

<div class="row">
    <PagerView PagerService="@PagerService" TotalItems="@TotalItems"/>
</div>